
--<- НАЧАЛО ->--

git clone <ssh ссылка на репо с гитхаба> --------- клонируем репозиторий на комп в текущую директорию
git pull ------------------------ скачиваем в текущую папку все с репозитория с ГХ
git status ---------------------- проверить статус файлов в папке репозитория на компе
git add <file.txt> -------------- добавить файл для добавления в репозиторий
git log (--oneline --decorate --graph --all) ------ инфо о коммите
git commit -m "commentary" ------ подготовить к коммиту файл
git push ------------------------ залить на гитхаб


заходим в произвольную папку с файлами, 
хотим контролировать наполнение папки с помощью гита: git init
git add . ----------------------- добавляем все (.) файлы из папки к коммиту.
git commit -m "" ---------------- закомитить


--<- ОШИБКИ ->--

git checkout <fileName>, git checkout . ------- откатиться к последней закомиченной версии файла
git clean -xdn а затем git clean - xdf -------- удалить незакомиченые файлы.
git restore --staged <fileName> or . ---------- убрать из коммита файлы
git commit --amend -m "New Commentary"--------- изменить текст комментария к последнему коммиту
git reset HEAD~1-----(~N -N коммитов назад) --- откатиться на несколько коммитов назад
git revert HEAD ------------------------------- отменить последний неудачный коммит, закомитить повторно нормально.
git push --force ------------------------------ принудительно переписать репозиторий на гитхабе по образцу директории на компе. Делать так не нужно
.gitignore ------------------------------------ прописать расширения файлов, которые не будут отслеживаться гитом  (*mp3, имя readme, etc)


--<- ВЕТКИ ->--

git status ------------------------- проверить, на какой ветка находишься
git branch <Name of branch> -------- создать новую ветку
git checout -b <Name of branch> ---- создать и переключиться на новую ветку
git branch -v ---------------------- проверить список существующих веток и на какой находишься
git checkout <Name of branch> ------ переключиться на другую ветку
git branch -d <Name of branch> ----- удалить ветку. но перед этим необходимо уйти с нее.
git merge <Other Branch> ----------- вылить содержимое другой ветки в текущую
